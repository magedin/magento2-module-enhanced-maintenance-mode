<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2022 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\EnhancedMaintenanceMode\Model;

use MagedIn\EnhancedMaintenanceMode\Console\Command\ScopeProvider;
use Magento\Framework\Exception\LocalizedException;
use Magento\Store\Model\StoreManagerInterface;

class FlagFilesProvider
{
    /**
     * @var StoreManagerInterface
     */
    private $storeManager;

    /**
     * @var ScopeProvider
     */
    private $scopeProvider;

    /**
     * @param StoreManagerInterface $storeManager
     * @param ScopeProvider $scopeProvider
     */
    public function __construct(
        StoreManagerInterface $storeManager,
        ScopeProvider $scopeProvider
    ) {
        $this->storeManager = $storeManager;
        $this->scopeProvider = $scopeProvider;
    }

    /**
     * @return array
     * @throws LocalizedException
     */
    public function getFlagFiles(): array
    {
        return [
            $this->getStoreFlagFile(),
            $this->getWebsiteFlagFile(),
        ];
    }

    /**
     * @param string $code
     * @return string
     */
    private function buildFileName(string $code): string
    {
        return ".maintenance.$code.flag";
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    public function getWebsiteFlagFile(): string
    {
        return $this->buildFileName($this->getWebsiteFlagCode());
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    private function getWebsiteFlagCode(): string
    {
        return 'website_' . $this->normalizeScopeCode($this->getWebsiteCode());
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    public function getStoreFlagFile(): string
    {
        return $this->buildFileName($this->getStoreFlagCode());
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    private function getStoreFlagCode(): string
    {
        return 'store_' . $this->normalizeScopeCode($this->getStoreCode());
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    public function getScopeFlagFile(): string
    {
        if ($this->scopeProvider->isScopeStore()) {
            return $this->getStoreFlagFile();
        } else {
            return $this->getWebsiteFlagFile();
        }
    }

    /**
     * @param string $scopeCode
     * @return string
     */
    private function normalizeScopeCode(string $scopeCode): string
    {
        return strtolower(str_replace(' ', '_', $scopeCode));
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    private function getWebsiteCode(): string
    {
        $websiteCode = $this->scopeProvider->getCode();
        if ($websiteCode) {
            return $websiteCode;
        }
        return $this->storeManager->getWebsite()->getCode();
    }

    /**
     * @return string
     * @throws LocalizedException
     */
    private function getStoreCode(): string
    {
        $storeCode = $this->scopeProvider->getCode();
        if ($storeCode) {
            return $storeCode;
        }
        return $this->storeManager->getStore()->getCode();
    }
}
