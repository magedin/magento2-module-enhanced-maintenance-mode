<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2022 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\EnhancedMaintenanceMode\Console\Command;

use Magento\Backend\Console\Command\AbstractMaintenanceCommand as AbstractMaintenanceCommandBase;
use Magento\Backend\Model\Validator\IpValidator;
use Magento\Framework\App\MaintenanceMode;

abstract class AbstractMaintenanceCommand extends AbstractMaintenanceCommandBase
{
    /**
     * @var ScopeProvider
     */
    protected $scopeProvider;

    /**
     * @param MaintenanceMode $maintenanceMode
     * @param IpValidator $ipValidator
     * @param ScopeProvider $scopeProvider
     */
    public function __construct(
        MaintenanceMode $maintenanceMode,
        IpValidator $ipValidator,
        ScopeProvider $scopeProvider
    ) {
        $this->scopeProvider = $scopeProvider;
        parent::__construct($maintenanceMode, $ipValidator);
    }

    /**
     * @return string
     */
    abstract protected function getArgumentName(): string;

    /**
     * Enable maintenance mode
     *
     * @return bool
     */
    protected function isEnable(): bool
    {
        return true;
    }

    /**
     * Get enabled maintenance mode display string
     *
     * @return string
     */
    protected function getDisplayString(): string
    {
        return "<info>Enabled maintenance mode for website '{$this->scopeProvider->getCode()}'</info>";
    }
}
